/**
 * Project      graduation-cap-leds
 * @file        micro_LED.ino
 * @author      Sean Duffie
 * @link        https://github.com/SeanDuffie/graduation-cap-leds
 * 
 * The purpose of this project is to create a 
 */

#include "FastLED.h"

// Which pin on the Arduino is connected to the LEDs?
#define BUTTON1 2
#define BUTTON2 3
#define BUTTON3 4
#define BUTTON4 5
#define DATA_PIN 6 
#define COLOR_ORDER GRB
#define CHIPSET     WS2812B

// LED brightness, 0 (min) to 255 (max)
#define BRIGHTNESS 50

// Amount of time for each half-blink, in milliseconds
#define BLINK_TIME 25
uint8_t MULTIPLIER = 5;

// How many LEDs are attached to the Arduino?
#define WIDTH 22
#define LENGTH 22
#define NUM_LEDS (WIDTH * LENGTH)
// const uint8_t LAST_VISIBLE_LED = NUM_LEDS-1;

// Param for different pixel layouts
#define kMatrixSerpentineLayout true
#define kMatrixVertical false

/* Declare the NeoPixel strip object:
*     * Argument 1 = Number of LEDs in the LED strip
*     * Argument 2 = Arduino pin number
*     * Argument 3 = LED strip color order
* 
* The FastLED_NeoPixel version uses template arguments instead of function
* arguments. Note the use of '<>' brackets!
* 
* You can switch between libraries by commenting out one of these two objects.
* In this example they should behave identically.
*/
// Adafruit_NeoPixel strip(NUM_LEDS, DATA_PIN, NEO_GRB);  // <- Adafruit NeoPixel version
// FastLED_NeoPixel<NUM_LEDS, DATA_PIN, NEO_GRB> strip;      // <- FastLED NeoPixel version

CRGB leds_plus_safety_pixel[NUM_LEDS];
CRGB* const leds( leds_plus_safety_pixel );

/** Helper functions for an two-dimensional XY matrix of pixels.
    Simple 2-D demo code is included as well.

        XY(x,y) takes x and y coordinates and returns an LED index number,
                for use like this:  leds[ XY(x,y) ] == CRGB::Red;
                No error checking is performed on the ranges of x and y.

        XYsafe(x,y) takes x and y coordinates and returns an LED index number,
                for use like this:  leds[ XYsafe(x,y) ] == CRGB::Red;
                Error checking IS performed on the ranges of x and y, and an
                index of "-1" is returned.  Special instructions below
                explain how to use this without having to do your own error
                checking every time you use this function.  
                This is a slightly more advanced technique, and 
                it REQUIRES SPECIAL ADDITIONAL setup, described below.
 */

/** Set 'kMatrixSerpentineLayout' to false if your pixels are 
    laid out all running the same way, like this:

    0 >  1 >  2 >  3 >  4
                        |
    .----<----<----<----'
    |
    5 >  6 >  7 >  8 >  9
                        |
    .----<----<----<----'
    |
    10 > 11 > 12 > 13 > 14
                        |
    .----<----<----<----'
    |
    15 > 16 > 17 > 18 > 19

    Set 'kMatrixSerpentineLayout' to true if your pixels are 
    laid out back-and-forth, like this:

    0 >  1 >  2 >  3 >  4
                        |
                        |
    9 <  8 <  7 <  6 <  5
    |
    |
    10 > 11 > 12 > 13 > 14
                        |
                        |
    19 < 18 < 17 < 16 < 15

    Bonus vocabulary word: anything that goes one way 
    in one row, and then backwards in the next row, and so on
    is call "boustrophedon", meaning "as the ox plows."


    This function will return the right 'led index number' for 
    a given set of X and Y coordinates on your matrix.  
    IT DOES NOT CHECK THE COORDINATE BOUNDARIES.  
    That's up to you.  Don't pass it bogus values.

    Use the "XY" function like this:

    for( uint8_t x = 0; x < kMatrixWidth; x++) {
        for( uint8_t y = 0; y < kMatrixHeight; y++) {
        
        // Here's the x, y to 'led index' in action: 
        leds[ XY( x, y) ] = CHSV( random8(), 255, 255);
        
        }
    }
 */
uint16_t XY( uint8_t x, uint8_t y) {
    uint16_t i;

    if (kMatrixSerpentineLayout == false) {
        if (kMatrixVertical == false) {
            i = (y * WIDTH) + x;
        } else {
            i = LENGTH * (WIDTH - (x + 1)) + y;
        }
    }

    if (kMatrixSerpentineLayout == true) {
        if (kMatrixVertical == false) {
            if (y & 0x01) {
                // Odd rows run backwards
                uint8_t reverseX = (WIDTH - 1) - x;
                i = (y * WIDTH) + reverseX;
            } else {
                // Even rows run forwards
                i = (y * WIDTH) + x;
            }
        } else { // vertical positioning
            if (x & 0x01) {
                i = LENGTH * (WIDTH - (x + 1)) + y;
            } else {
                i = LENGTH * (WIDTH - x) - (y + 1);
            }
        }
    }

    return i;
}

/** Once you've gotten the basics working (AND NOT UNTIL THEN!)
    here's a helpful technique that can be tricky to set up, but 
    then helps you avoid the needs for sprinkling array-bound-checking
    throughout your code.

    It requires a careful attention to get it set up correctly, but
    can potentially make your code smaller and faster.

    Suppose you have an 8 x 5 matrix of 40 LEDs.  Normally, you'd
    delcare your leds array like this:
    CRGB leds[40];
    But instead of that, declare an LED buffer with one extra pixel in
    it, "leds_plus_safety_pixel".  Then declare "leds" as a pointer to
    that array, but starting with the 2nd element (id=1) of that array: 
    CRGB leds_with_safety_pixel[41];
    CRGB* const leds( leds_plus_safety_pixel + 1);
    Then you use the "leds" array as you normally would.
    Now "leds[0..N]" are aliases for "leds_plus_safety_pixel[1..(N+1)]",
    AND leds[-1] is now a legitimate and safe alias for leds_plus_safety_pixel[0].
    leds_plus_safety_pixel[0] aka leds[-1] is now your "safety pixel".

    Now instead of using the XY function above, use the one below, "XYsafe".

    If the X and Y values are 'in bounds', this function will return an index
    into the visible led array, same as "XY" does.
    HOWEVER -- and this is the trick -- if the X or Y values
    are out of bounds, this function will return an index of -1.
    And since leds[-1] is actually just an alias for leds_plus_safety_pixel[0],
    it's a totally safe and legal place to access.  And since the 'safety pixel'
    falls 'outside' the visible part of the LED array, anything you write 
    there is hidden from view automatically.
    Thus, this line of code is totally safe, regardless of the actual size of
    your matrix:
    leds[ XYsafe( random8(), random8() ) ] = CHSV( random8(), 255, 255);

    The only catch here is that while this makes it safe to read from and
    write to 'any pixel', there's really only ONE 'safety pixel'.  No matter
    what out-of-bounds coordinates you write to, you'll really be writing to
    that one safety pixel.  And if you try to READ from the safety pixel,
    you'll read whatever was written there last, reglardless of what coordinates
    were supplied.
 */
uint16_t XYsafe( uint8_t x, uint8_t y) {
    if( x >= WIDTH) return -1;
    if( y >= LENGTH) return -1;
    return XY(x,y);
}

/*********** IMAGE LIB **********/
const long Bird0[] PROGMEM =
{
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x1f1919,0x171114,0x171114,0x1f1919,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x070507,0xf58889,0xf6898a,0xf6898a,0xf28686,0x070507,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x1e171a,0xf6898a,0xf6898a,0xf6898a,0x282425,0x484242,0xf6898a,0x070507,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x050405,0xf6898a,0x070507,0xf6898a,0x070507,0x6a6764,0x6a6764,0x6a6764,0x070507,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x1d191b,0xf6898a,0xf6898a,0x595553,0xf6898a,0x070507,0x6a6764,0x6a6764,0x403c3c,0xad7675,0x242222,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x8c6f6c,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0x070507,0x6a6764,0x6a6764,0x484242,0xf6898a,0x070507,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x070507,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0x070507,0x6a6764,0x6a6764,0xd07f7e,0xf6898a,0x484242,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x070507,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xad7675,0x6a6764,0x171114,0xf6898a,0xf6898a,0xb07877,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x312b2f,0x070507,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0x050405,0x171114,0xf6898a,0xf6898a,0x484242,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x070507,0x8c6f6c,0xf38788,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf58889,0xf6898a,0xf6898a,0x070507,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x0d0a0c,0xf38788,0xf6898a,0x0f0b0d,0xf38788,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0x242222,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x2f2a2d,0x0f0b0d,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0x7b5c5b,0x0f0b0d,0x6a6764,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0x242222,0x000000,0x000000,0x000000,
0x000000,0x000000,0x0f0b0d,0xf28686,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0x070507,0x000000,0x000000,0x000000,
0x000000,0x000000,0xad7675,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0x7b5c5b,0x000000,0x000000,0x000000,
0x000000,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x1e171a,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x393538,0x000000,0x000000
};

const long Bird1[] PROGMEM =
{
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x171114,0x484242,0x8eed8f,0x7fb581,0x070507,0x21221f,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x070507,0x89f288,0x87f485,0x89f288,0x87f485,0x8eed8f,0x86d889,0x3d3636,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x070507,0x8eed8f,0x171114,0x87f485,0x070507,0x6a6764,0x373031,0x88d68b,0x261d20,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x110e0d,0x7fb581,0x87f485,0x070507,0x87f485,0x171114,0x6a6764,0x6a6764,0x595553,0x373031,0x110e0d,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x070507,0x8bf18a,0x87f485,0x87f485,0x87f485,0x171114,0x6a6764,0x6a6764,0x7caa7a,0x87f485,0x070507,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x1e171a,0x87f485,0x87f485,0x87f485,0x87f485,0x070507,0x6a6764,0x6a6764,0x8cef8d,0x87f485,0x87f485,0x262122,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x7aac77,0x87f485,0x87f485,0x87f485,0x87f485,0x171114,0x6a6764,0x171114,0x87f485,0x87f485,0x87f485,0x171114,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x8bf18a,0x87f485,0x87f485,0x87f485,0x87f485,0x8cef8d,0x1e171a,0x171114,0x87f485,0x87f485,0x87f485,0x7caa7a,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x484242,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x62765e,0x8eed8f,0x87f485,0x87f485,0x87f485,0x3f3b3a,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x070507,0x89f288,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x171114,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x070507,0x0f0b0d,0x7fb581,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x8cef8d,0x050405,0x21221f,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x484242,0x87f485,0x8cef8d,0x070507,0x2f2a2b,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x8eed8f,0x050405,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x070507,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x62765e,0x31372d,0x000000,0x000000,
0x000000,0x000000,0x484242,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x87f485,0x769376,0x332e31,0x000000,
0x000000,0x000000,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x070507,0x000000
};

const long Bird2[] PROGMEM =
{
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x070507,0x373031,0x7c8cab,0x171114,0x0f0b0d,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x0f0b0d,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x070507,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x0f0b0d,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x373031,0x070507,0x545f6c,0x8eb1f1,0x0f0b0d,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x171114,0x8eb1f1,0x8eb1f1,0x070507,0x8eb1f1,0x595553,0x6a6764,0x484242,0x070507,0x070507,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x282425,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x6a6764,0x6a6764,0x6a6764,0x8eb1f1,0x8eb1f1,0x3a3131,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x202321,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x6a6764,0x6a6764,0x484242,0x8eb1f1,0x8eb1f1,0x373031,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x070507,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x171114,0x6a6764,0x070507,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x0f0b0d,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x070507,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x1e171a,0x6a6764,0x171114,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x070507,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x322d2c,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x070507,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x070507,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x282425,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x88a9d5,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x070507,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x6d726b,0x7f97b2,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x070507,0x20201e,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x8eb1f1,0x65727d,0x1e171a,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x070507,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x82a1b9,0x8eb1f1,0x8eb1f1,0x2f2a2b,0x070507,0x1e171a,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x8eb1f1,0x1e171a,0x000000,0x000000,0x000000,0x000000,
0x000000,0x070507,0x171114,0x261d20,0x261d20,0x1e171a,0x261d20,0x261d20,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x171114,0x261d20,0x070507,0x100d0d,0x000000,0x000000
};

const long Bird3[] PROGMEM =
{
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x242624,0x242624,0x2d2929,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x0f0b0d,0x9a8582,0xf586f6,0xf586f6,0xf586f6,0x605151,0x342c2d,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x070507,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0xe895df,0x211d1d,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x3b3534,0xf38ef4,0xf586f6,0x5c5f5a,0xf586f6,0x070507,0x6a6764,0x070507,0xbb94a5,0x070507,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x282425,0xf586f6,0xf586f6,0x070507,0xf586f6,0x373031,0x6a6764,0x6a6764,0x171114,0x484242,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x33282a,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0x484242,0x6a6764,0x6a6764,0xf196f3,0xf586f6,0x070507,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x070507,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0x171114,0x6a6764,0x595553,0xf586f6,0xf586f6,0x9d8f89,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x484242,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0x070507,0x6a6764,0x070507,0xf586f6,0xf586f6,0xf196f3,0x1a1818,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0xb19bb8,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0xdba4c8,0x595553,0x403c3c,0xf586f6,0xf586f6,0xe69ddd,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x312c2f,0x716362,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0x2f2a2b,0xf586f6,0xf586f6,0xf586f6,0x484242,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x312a29,0x5c5f5a,0x1e171a,0xe895df,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0x070507,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x373031,0xf586f6,0xf586f6,0xa6909d,0x070507,0x4e5750,0xe69ddd,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0xf586f6,0x171114,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x3b3534,0x171114,0x261d20,0x261d20,0x373031,0x261d20,0x261d20,0x1e171a,0x373031,0x261d20,0x261d20,0x373031,0x373031,0x261d20,0x070507,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000
};

const long Bird4[] PROGMEM =
{
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x332f2e,0x070507,0x070507,0x343733,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x302a29,0x1e171a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0x716362,0x262022,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x302a29,0x9a8582,0xf6898a,0xf6898a,0xf6898a,0x595553,0x484242,0xf6898a,0xca908c,0x1f261c,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x595553,0xf6898a,0x1e171a,0x9a8582,0x484242,0x6a6764,0x6a6764,0x070507,0x070507,0x070507,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x2f2a2b,0xf6898a,0xf6898a,0x9a8582,0xeb8f90,0x171114,0x6a6764,0x6a6764,0x070507,0x484242,0x484242,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x070507,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0x282425,0x6a6764,0x6a6764,0x070507,0xf6898a,0xeb8f90,0x21191e,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x312d2d,0x171114,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0x827673,0x6a6764,0x6a6764,0x171114,0xf6898a,0xf6898a,0x2f2d2d,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x070507,0x0f0b0d,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0x484242,0x6d726b,0xcb918d,0xf6898a,0xf6898a,0x070507,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x0f0b0d,0xcaa2a0,0x373031,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0x2f2a2b,0x070507,0xf6898a,0xf6898a,0xf6898a,0x262022,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x070507,0xf6898a,0xf6898a,0xf6898a,0x0f0b0d,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0x6a6764,0xf6898a,0xf6898a,0x9a8582,0x000000,0x000000,0x000000,
0x000000,0x000000,0x302a29,0x595553,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0x070507,0x595553,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0x020102,0x000000,0x000000,0x000000,
0x000000,0x252423,0xb29391,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0x9a8582,0x6a6764,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0xf6898a,0x070507,0x000000,0x000000,0x000000,
0x000000,0x070507,0x1e171a,0x261d20,0x261d20,0x1e171a,0x171114,0x171114,0x261d20,0x484242,0x484242,0x261d20,0x261d20,0x261d20,0x261d20,0x171114,0x1e171a,0x261d20,0x070507,0x000000,0x000000,0x000000 
};

const long Pingu0[] PROGMEM =
{
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x291414,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0xf9fdff,0x514e4e,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x616262,0xffffff,0xffffff,0x393a3a,0x4f4f50,0x3a3a3a,0x342f2f,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x170808,0xffffff,0xffffff,0xf8f8f8,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0xffffff,0xffffff,0xffffff,0x444444,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0xfdfeff,0xffffff,0xffffff,0xffffff,0xffffff,0x929292,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x482f30,0x3a3a3a,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0x535354,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x231819,0x3a3a3a,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x2a0c0c,0x3a3a3a,0xfcfeff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000
};

const long Pingu1[] PROGMEM =
{
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x422829,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x382626,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x8f9192,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x8c8d8e,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xffffff,0x000000,0x3a3a3b,0x6f6e6e,0x6d6d6e,0x3a3a3a,0xfdfdfd,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xffffff,0xffffff,0xffffff,0xfcfcfc,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xffffff,0x382626,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x110303,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0xa2a0a0,0xfeffff,0xffffff,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0xfdfeff,0xffffff,0xffffff,0xffffff,0xffffff,0xdedede,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x343131,0x3a3a3a,0x3a3a3a,0x9c9d9d,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0xfdfeff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3b3535,0x292223,0x291f1f,0x3a3a3a,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000
};

const long Pingu2[] PROGMEM =
{
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x6d6667,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xffffff,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x402c2c,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0xffffff,0x3a3a3a,0x000000,0x3c1111,0x3e3e3e,0xffffff,0xffffff,0xffffff,0x3a3a3a,0xffffff,0xfefefe,0x3a3a3a,0x3a3a3a,0x373737,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x3d3c3c,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0x636364,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0xffffff,0xffffff,0xffffff,0xffffff,0x5d5e5f,0x050101,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,0x000000,
0xffffff,0xffffff,0x150404,0x000000,0x000000,0x000000,0x000000,0x000000,0x3b3737,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x331212,0x000000,0x000000,0x000000,
0xd6d6d7,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x160909,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0xfdfeff,0xffffff,0xffffff,0xffffff,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x343131,0x3a3a3a,0x3a3a3a,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0xfdfeff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0x5b5757,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x2c2020,0x231415,0x3a3a3a,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a
};

const long Pingu3[] PROGMEM =
{
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3c2e2e,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xfbfdff,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3d3d3e,0xfafbfb,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x2f0a0a,0x3a3a3a,0x3a3a3a,0xffffff,0xffffff,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x6e6e6e,0xffffff,0xfeffff,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3b2d2d,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x312627,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x120404,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x382121,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0xffffff,0xffffff,0xffffff,0xffffff,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xfcfeff,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0xfdfeff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x393939,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x3a3a3a,0x3a3a3a,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0x3a3a3a,0x3a3a3a,0x3a3a3a,0x3a3a3a,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x3a3a3a,0x000000,0x3a3a3a,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0xffffff,0x3a3a3a,0x3a3a3a,0x0e0404,0x3a3a3a
};

const long Pingu4[] PROGMEM =
{
0x1d1f3b,0x1d1f3b,0x1d1f3b,0x1d1f3b,0x1d1f3b,0x1d1f3b,0x1d1f3b,0x1d1f3b,0x1d1f3b,0x1d1f3b,0x1b1d35,0x161829,0x161829,0x1d1f3b,0x1d1f3b,0x1d1f3b,0x1d1f3b,0x1d1f3b,0x1d1f3b,0x1d1f3b,0x1d1f3b,0x1d1f3b,
0x2c2f40,0x2c2f40,0x2c2f40,0x2c2f40,0x2c2f40,0x2c2f40,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x2c2f40,0x2c2f40,0x2c2f40,0x2c2f40,0x2c2f40,
0x2c2f40,0x2c2f40,0x2e334c,0x2c2f40,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x030304,0x030304,0x31385e,0x2e334c,0x2c2f40,
0x31385e,0x31385e,0x31385e,0x000000,0x030304,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x030304,0x000000,0x000000,0x31385e,0x31385e,
0x31385e,0x31385e,0x000000,0x000000,0x000000,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x131520,0x030304,0x030304,0x000000,0x030303,0x000000,0x000000,0x000000,0x000000,0x31385e,
0x31385e,0x030304,0x000000,0x000000,0x000000,0x000000,0x030304,0x030304,0x030304,0x030304,0x030304,0x030304,0x030304,0x030304,0x030304,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x05050a,
0x31385e,0x030304,0x020202,0xb3b4b5,0x7e8283,0xb5b9ba,0x000000,0x030304,0x030304,0x030304,0x030304,0x030304,0x030304,0x030304,0x030304,0x000000,0xb5b9ba,0xb5b9ba,0xb5b9ba,0x010101,0x000000,0x000000,
0x333851,0x000000,0xada4a5,0x2c2f40,0x2b2e3f,0xb5b9ba,0x030304,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x6c6f74,0x3c404b,0x2c2f40,0x594f55,0x000000,0x000000,
0x000000,0x000000,0x010101,0x000000,0x000000,0xb5b9ba,0x030303,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x101011,0x010102,0x000000,0x000000,0x000000,0xb5b9ba,0x000000,
0x000000,0x000000,0xb5b9ba,0x8c9091,0x000000,0xb5b9ba,0x000000,0x000000,0x000000,0x000000,0x1a1c28,0x574849,0x000000,0x000000,0x000000,0x000000,0xb5b9ba,0x000000,0x000000,0x000000,0x030304,0x000000,
0x000000,0x010101,0x000000,0xb5b9ba,0x87888d,0x010101,0x000000,0x674b4b,0x5b4b4c,0x824b48,0x824b48,0x824b48,0x5b4b4c,0x5b4b4c,0x010101,0x000000,0x010101,0xf3f4f4,0xf3f4f4,0x686b6e,0x030304,0x030304,
0x020203,0x131520,0x1d1f3b,0x1d1f3b,0x1d1f3b,0x030304,0x5b4b4c,0x5b4b4c,0x5b4b4c,0x824b48,0x824b48,0x5b4b4c,0x5b4b4c,0x5b4b4c,0x5b4b4c,0x020202,0x131520,0x131520,0x131520,0x131520,0x030305,0x030304,
0x030304,0x1d1f3b,0x2c2f40,0x2c2f40,0x1d1f3b,0x5b4b4c,0x5b4b4c,0x5b4b4c,0x5b4b4c,0x757778,0x824b48,0x5b4b4c,0x5b4b4c,0x5b4b4c,0x5b4b4c,0x70413e,0x2d3040,0x3f434d,0x2c2f40,0x2c2f40,0x2c2f40,0x0e0f17,
0x030304,0x1e1f3b,0x2c2f40,0x3f434d,0x9f8383,0x5b4b4c,0x5b4b4c,0x5b4b4c,0x824b48,0x824b48,0x824b48,0x5b4b4c,0x5b4b4c,0x5b4b4c,0x5b4b4c,0x7d4b48,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x2c2f40,0x131520,
0x131520,0x1d1f3b,0x3f434d,0x3f434d,0x545157,0x824b48,0xa48c8d,0xa48c8d,0xa48c8d,0xa48c8d,0xa48c8d,0xa48c8d,0xa48c8d,0xa48c8d,0x8f6564,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x2c2f40,0x0e0f17,
0x414b76,0x131520,0x2c2f40,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x2c2f40,0x2a2d3f,0x08090d,
0x414b76,0x0b0c12,0x181a2e,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x2c2f40,0x131520,0x414b76,
0x414b76,0x414b76,0x16172a,0x1d1f3b,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x3f434d,0x414b76,0x414b76,0x414b76,0x414b76,0x414b76,0x414b76,0x414b76,0x3f434d,0x2c2f40,0x131520,0x030304,0x414b76,
0x414b76,0x414b76,0x414b76,0x414b76,0x131520,0x3f434d,0x414b76,0x414b76,0x414b76,0x414b76,0x414b76,0x414b76,0x414b76,0x414b76,0x414b76,0x414b76,0x31385e,0x1d1f3b,0x000000,0x414b76,0x414b76,0x414b76,
0x414b76,0x414b76,0x414b76,0x414b76,0x414b76,0x414b76,0x1d1f3b,0x31385e,0x414b76,0x414b76,0x414b76,0x414b76,0x414b76,0x414b76,0x31385e,0x23253d,0x131520,0x030304,0x414b76,0x414b76,0x414b76,0x414b76,
0x414b76,0x414b76,0x414b76,0x414b76,0x414b76,0x414b76,0x000001,0x000000,0x000000,0x000000,0x000000,0x020203,0x040405,0x222433,0x12141f,0x030304,0x000000,0x000000,0x000000,0x000000,0x1e203c,0x414b76,
0x414b76,0x414b76,0x414b76,0x414b76,0x3f4768,0x000000,0x000000,0x010101,0x3a3e4a,0x3a3f53,0x343c63,0x414b76,0x3c456e,0x31385e,0x31385e,0x2c2f40,0x2c2f40,0x1d1f3b,0x06070b,0x000000,0x000000,0x010101
};

const long Pop0[] PROGMEM =
{
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xcebcbd,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x847163,0x030101,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xb59d98,0xc0a89c,0xb8ac9f,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x83675c,0x92776e,0x826859,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x96876d,0xad9a8c,0xbb9b9e,0xb69a95,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x856860,0x866b60,0x967c6f,0x7b624e,0x96816d,0x988b81,0x807461,0x9f958b,0xe7ded7,0xefe2da,0xc4b8a0,0xb09e88,0xa78b76,0xbb9890,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x836158,0x805f50,0x90705b,0x8d6c5d,0x8a7251,0x947e69,0xdacbb8,0xe7dcd6,0xe4ddd7,0xede3e1,0xe7dad4,0xcec0af,0xa78770,0xc3a99a,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x9f8c81,0x7d5d4a,0x8e665e,0x9a7b69,0x8c6c59,0x9f8574,0x533f34,0x4e3f38,0xd7cec7,0xeae3db,0xe9e0d9,0x3f3122,0x563f2d,0xc3a795,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0xbc9b95,0x875c55,0x916c5f,0x856958,0xbda193,0xe7d6c2,0xd7c3ba,0xebdcd5,0xe3dcd2,0xe1cfcb,0xd4c9c0,0xf4e3db,0xd5c3be,0x453f41,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0xad8981,0x8d6763,0x806353,0x463022,0x8f7964,0xae9c8b,0xd1bfb3,0xd1c3bd,0xdacdc2,0xa48980,0xc3a29b,0xb19893,0xa58d88,0x9e8984,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x725b46,0x5d4833,0x4f3c2b,0x4c3a26,0x907a65,0x947a6b,0x7e6958,0x7e685a,0x7d6559,0x785551,0x6e4943,0x6c4e46,0x81635b,0x85695d,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x030202,0x3f2d1f,0x2b1811,0x69583d,0x937b6f,0x896f62,0x896f5e,0x806a5d,0x81655a,0x7e625f,0x815f5d,0x7d6355,0x7a5e50,0x826b5b,0x010100,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x392713,0x2d1a14,0x5f4e32,0x947a69,0x8e7161,0x89735d,0x867063,0x7e6956,0x7f6a57,0x7e685b,0x7a6353,0x755a51,0x7e6c5d,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x836d5a,0x281809,0x533f27,0x8d7762,0x927762,0x8d7762,0x866e62,0x7e6853,0x776247,0x796445,0x6f5942,0x7a6051,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0xa7977e,0x6f5c50,0x88745c,0x937c6a,0x977f67,0x91795e,0x8b7160,0x816854,0x7d6549,0x7d654b,0x7d6656,0x886d62,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0xa89281,0x967e72,0x987e70,0x968365,0x937e61,0x91775c,0x886e55,0x84665c,0x866763,0x816756,0x826b5b,0x8a7564,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0xb8b2a9,0xa49180,0x99876f,0x978071,0x967d68,0x927b59,0x8e765a,0x89705c,0x866b60,0x846865,0x816861,0x846e57,0x8f7d67,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0xb6a78c,0xa38c7c,0x9f897b,0x9e8274,0x9c8671,0x968067,0x957e5f,0x8f7660,0x896e63,0x896f62,0x826f61,0x826c57,0x77695c,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0xbebaa7,0xad9c8a,0xa3917d,0x9f8d77,0x9b8673,0x9e8473,0x9c8575,0x9a8166,0x967b72,0x8e726f,0x896e67,0x847162,0x836a56,0x877363,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0xd2c7b3,0xad9c82,0xa79581,0xa49171,0x9f8a75,0x9e867a,0x998272,0x977f67,0x957b6b,0x8e7270,0x8c6f69,0x8a6f64,0x867152,0x8b7361,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0xcac1b8,0xd0c4b6,0xa8967e,0xa79678,0xa5936f,0xa28b79,0xa0887c,0x988678,0x97806e,0x927e63,0x8c765f,0x8e7368,0x8a715e,0x8b7162,0x8f786a,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0xe1d7cd,0xcbb9af,0xa5957c,0xa29175,0xa49470,0x9f906f,0xa28b79,0x9c8679,0x988074,0x937e5e,0x947771,0x917769,0x8a745f,0x8d756b,0x8e7861,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0xd4cbc1,0xddd6cc,0xbdb1a7,0xa4947a,0xa59574,0xa49473,0xa28f74,0x9f8d77,0xa08a75,0x9a846d,0x937e5f,0x927965,0x8e755f,0x8d7267,0x866e6e,0x907667,0x000000,0x000000,0x000000,0x000000,0x000000
};

const long Pop1[] PROGMEM =
{
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xcfc0b9,0x635954,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000400,0x8d7366,0x907b6a,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xa0978f,0xc2aaa6,0xb9a194,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x030100,0x856556,0x977a6c,0x8b755a,0xbca594,0x000000,0x010000,0xa69a8c,0xede3d9,0xf0e4d9,0xcab8a5,0xbea096,0xb58f8c,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x86645a,0x84664e,0x9d7f67,0x7d593f,0x8d7456,0xddccba,0xd5c8bf,0xe6dfd5,0xe9e2dc,0xe3d0c2,0xd4bbaf,0x9a8574,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x695d54,0x83604c,0x95725e,0x9a7c62,0x977768,0xbca99a,0xebdcd2,0xa49089,0x70534b,0x58332d,0x5c3b36,0xc1afa1,0xe3d0c2,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0xc5a193,0x8f6056,0x78644c,0xc0ae96,0xc9bdb1,0x82685b,0x210b00,0x240b04,0x210a04,0x1c0b04,0x230c04,0x7b5b50,0xa28e80,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x8e6f5f,0x896d5f,0x57412b,0xa9947f,0x96786d,0x291306,0x251106,0x301410,0x301411,0x2d1511,0x26100b,0x341510,0x89745f,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x060200,0x463926,0x6f5b42,0x977768,0x39170f,0x2e130c,0x331515,0x321412,0x331515,0x301615,0x311613,0x361712,0x7a6552,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x382717,0x725e46,0x8f6d63,0x39180f,0x391e17,0x351613,0x341713,0x341713,0x361714,0x3e1e1c,0x48261c,0x7e6a4f,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x43301f,0x675c40,0x947863,0x836259,0x512822,0x4e1e1a,0x3e1913,0x3b1814,0x401d19,0x582522,0x72413a,0x87735a,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xae967e,0x846b57,0x9b7d72,0x967a6e,0x825d55,0x71403c,0x5c2c28,0x582824,0x632e2c,0x7a3c3a,0x846259,0x020202,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xa79378,0x9a8065,0x9a7f6a,0x997e6d,0x937666,0x906c60,0x85564e,0x7e5040,0x7c5140,0x886253,0x7a6957,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xa88e7d,0xa0866d,0x9d836a,0x987e65,0x957a60,0x8f7060,0x89675b,0x7f5e4d,0x786042,0x7f675c,0x988674,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0xb4a98f,0xad9281,0xa78f6d,0xa48a6f,0x9f856c,0x9c806a,0x917368,0x8b6e60,0x866b58,0x846960,0x877356,0xa78b7d,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0xb3a18d,0xa8967e,0xa38d68,0xa28a72,0xa08570,0x9f8273,0x997d65,0x917368,0x8f7568,0x886d64,0x8c7766,0xa18673,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0xe3d6c6,0xac9c83,0xa8977b,0xae9483,0xa08b76,0xa18b73,0x9a8373,0x968165,0x917567,0x90765d,0x8e7757,0x927668,0x988171,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x130e0c,0xddd1c2,0xab9c74,0xa99475,0xa79273,0xa69176,0xa08b70,0x9e896c,0x967e6f,0x947771,0x947a5f,0x8d775d,0x8f795f,0x947f64,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0xded6c3,0xd2c9c4,0xa79378,0xa69277,0xa89473,0xa5947a,0xa38f77,0xa08773,0x9a846d,0x947d6f,0x917862,0x8f7461,0x927967,0x9a7f6e,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0xe0d2c7,0xcdbeb7,0xa68e82,0xa29177,0xa39070,0xa39070,0xa38e79,0xa48976,0x9f856c,0x9b8168,0x997e69,0x937a73,0x907468,0x95796b,0x000000,0x000000,0x000000,0x000000,0x000000
};

const long rr0[] PROGMEM =
{
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x181616,0x362a23,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x783d1e,0x744329,0x794f3a,0x33201e,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x26201f,0x9e6961,0xa27875,0x8c645f,0x643a27,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x322a26,0x916a5e,0xaa827c,0xa27875,0x694535,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x664d48,0x9a7164,0x8d6462,0xa27875,0x724e45,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x493535,0xac7475,0x9d7471,0x8b7472,0x28252c,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x161516,0x9e6961,0x98706e,0x726a67,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x332b29,0x966e5d,0x865251,0xa8807b,0x8e827b,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x88616a,0x41291f,0x432b27,0xad95a3,0x8d5b60,0x9e6a6d,0xa39aa4,0x403932,0x0f0d0e,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x43312a,0x383124,0x362e2a,0x302c1c,0x988f8a,0x9d737b,0x998f97,0x756d6f,0x34332f,0x38302a,0x3b332f,0x211f20,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x353121,0x302c1d,0x38302b,0x383124,0x342c28,0x3b3430,0x766d70,0x3f3932,0x3b352b,0x38302a,0x3b352a,0x3d3831,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x302c1c,0x2c2818,0x2c2818,0x2c3020,0x302c1c,0x534c44,0x918988,0x3c3438,0x303028,0x332b27,0x38302b,0x362f28,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x534845,0x2c2818,0x282414,0x2c2818,0x2c2818,0x846661,0x8d6462,0x7e6a69,0x3c352a,0x2c2c24,0x2e2e26,0x303028,0x352d29,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x38302c,0x302c1c,0x282414,0x2c2818,0x302c1c,0x86614f,0x815a56,0x544c4a,0x4b4440,0x323231,0x2a2a22,0x2c2d24,0x362e2a,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x372f2b,0x2c2818,0x282414,0x2c2818,0x392814,0x795448,0x38302c,0x38302c,0x4d4544,0x303028,0x2a2a22,0x292921,0x2a2a22,0x000000,0x805956,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x282414,0x302c1c,0x2c2811,0x3e382a,0x363122,0x242010,0x302824,0x433c34,0x362e2a,0x372e2a,0x282921,0x24241c,0x2a2a22,0x6d493d,0x8d6262,0x9e8a8b,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x302c1c,0x2c2818,0x2f2b13,0x26220a,0x26220a,0x1b2004,0x302823,0x3b3430,0x5a534b,0x242010,0x2c2818,0x22200d,0x1e1c06,0x7c4c30,0x7a5448,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x4d414d,0x363122,0x3d2f2c,0x26220a,0x353018,0x231e08,0x302824,0x716a62,0x3a3426,0x302c1c,0x242010,0x1f1a06,0x1f1a06,0x372612,0x291c0f,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x2c2818,0x282414,0x242010,0x2f2723,0x352d29,0x494336,0x55453d,0x2c2818,0x231e10,0x211d0b,0x292326,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x2c2818,0x282414,0x282414,0x221e0c,0x3e3831,0x837a7d,0x726a6c,0x3e3631,0x342c28,0x635c56,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000
};

const long rr1[] PROGMEM =
{
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xa4786c,0x68341a,0x5a3521,0x623926,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x764429,0x9b6a5b,0xa57f75,0xa77e79,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x865247,0x7a4a3c,0xa77777,0xa9827e,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xb5867e,0xa26b69,0x9e6a6c,0xaa827c,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xa67977,0x985f58,0xaf7378,0xa9817b,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x9b736c,0x9b6151,0xad7274,0x554b4f,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0xa6746a,0x955c57,0xa67172,0x6e565f,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x6a534e,0x7b665b,0x73615f,0x9a6465,0x8e5b61,0x433a3b,0x42302d,0x846c6c,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x5e433f,0x4a3129,0x433229,0x5a3f3b,0x726a66,0x9d787d,0xa89da7,0x433a3b,0x796966,0x3e2b22,0x3c2b29,0x5e4948,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x493029,0x423126,0x343020,0x4b3a31,0x857270,0x45332d,0x655e57,0x43322b,0x956263,0x9b7370,0x3b332f,0x3b3430,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x432b27,0x363121,0x373122,0x363122,0x827a72,0x685654,0x3e3831,0x312925,0x815f54,0x9c7471,0x3b332e,0x3c3436,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x3c2c20,0x353018,0x312d15,0x302c1c,0x7c6967,0x715e5c,0x37302b,0x302c1c,0x48372c,0xa88277,0x3a322e,0x3b3330,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x343020,0x322e16,0x2f2b14,0x2e2a12,0x766560,0x7e6d65,0x342c28,0x2f2b1b,0x2a260e,0x423922,0x473f3e,0x352d29,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x59403a,0x392814,0x2e2a12,0x8e665b,0x86594f,0x453e2b,0x8e7e76,0x302c1c,0x2c2810,0x2a260e,0x2b270f,0x322a26,0x362f2a,0x312925,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x6c5451,0x674e3c,0x7f6d59,0x9b635d,0x633a27,0x353020,0x3c3627,0x2c2818,0x2b260f,0x28240c,0x252109,0x282414,0x372f2c,0x362f26,0x3b3330,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x4b3220,0x513b28,0x3c2c20,0x87594b,0x392219,0x3b342e,0x2a2717,0x2c2810,0x282414,0x2a260e,0x26220a,0x26220a,0x2c2818,0x322a26,0x403739,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x070606,0x584339,0x453131,0x2c2810,0x352d29,0x615a52,0x2c2818,0x312925,0x282414,0x282414,0x242010,0x26220a,0x242010,0x302c1c,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x302c1c,0x373028,0x322e1e,0x342f17,0x2c2818,0x282414,0x282414,0x302824,0x2a2616,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x302c1c,0x373025,0x6d6562,0x342e23,0x343334,0x29211d,0x282414,0x28211d,0x303028,0x323231,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x373223,0x39312d,0x6e6662,0x3b3330,0x333332,0x2b2b24,0x24241c,0x29211e,0x2d2d25,0x323231,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x332b27,0x322a26,0x736b6b,0x615a52,0x343136,0x323231,0x2c2c24,0x29211d,0x2e2622,0x2c2c2c,0x000000,0x000000,0x000000,0x000000,0x000000,
0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x000000,0x352e29,0x322a26,0x797174,0x69635d,0x342c30,0x323231,0x323231,0x2f2723,0x2e2622,0x323231,0x696566,0x000000,0x000000,0x000000,0x000000
};

const long bird[] = {Bird0, Bird1, Bird2, Bird3, Bird4};
const long pingu[] = {Pingu0, Pingu1, Pingu2, Pingu1, Pingu2, Pingu1, Pingu3, Pingu4};
const long pop_cat[] = {Pop0, Pop1};
const long rroll[] = {rr0, rr1};

int num_sets = 4;
int num_img[] = {5, 8, 2, 2};
int state = 0;

bool Paused = false;

void setup() {
    /** Start Serial Terminal for debugging */
//    Serial.begin(115200);
    
    /** Set up the LED Matrix */
    FastLED.addLeds<CHIPSET, DATA_PIN, COLOR_ORDER>(leds, NUM_LEDS).setCorrection(TypicalSMD5050);
    FastLED.setBrightness(BRIGHTNESS);
    FastLED.clear();

    /** Set up the button inputs */
    pinMode(BUTTON1, INPUT);
    pinMode(BUTTON2, INPUT);
    pinMode(BUTTON3, INPUT);
    pinMode(BUTTON4, INPUT);

    /** Flash RGB to debug LEDs */
//    StartFlash();
}

void loop() {
    int c = 0;
    
    while (c < num_img[state]) {
        /** Draw the current frame
         *   
         *  state - determines the image set
         *  c - determines the frame in the current set 
         */
        switch(state) {
            case 0:
                DrawOneFrame(bird[c]);
                break;
            case 1:
                DrawOneFrame(pingu[c]);
                break;
            case 2:
                DrawOneFrame(pop_cat[c]);
                break;
            case 3:
                DrawOneFrame(rroll[c]);
                break;
        }
        
        /** Split the delay into batches to reduce button lag */
        for (int i=0; i < MULTIPLIER; i++) {
            /** Button 1 is pressed
             *  
             *  If Not Paused, this will SPEED up the framerate
             *  If Paused, this will move FORWARD one frame
             */
            if (digitalRead(BUTTON1)) {
                if (Paused) {
                    c++;
                    delay(BLINK_TIME*10);
                    break;
                } else {
                    if (MULTIPLIER > 1) { MULTIPLIER -= 1; }
                }
            }
            /** Button 2 is pressed
             *  
             *  If Not Paused, this will SLOW down the framerate
             *  If Paused, this will move BACKWARD one frame
             */
            if (digitalRead(BUTTON2)) {
                if (Paused) {
                    if (c <= 0) {
                        c = num_img[state]-1;
                    } else {
                        c--;
                    }
                    delay(BLINK_TIME*10);
                    break;
                } else {
                    if (MULTIPLIER < 255) { MULTIPLIER += 1; }
                }
            }
            /** Toggle Pause/play if Button 3 is pressed */
            if (digitalRead(BUTTON3)) {
                Paused = !Paused;
                delay(BLINK_TIME*10);
            }
            /** Cycle State if Button 4 is pressed */
            if (digitalRead(BUTTON4)) {
                if (state >= num_sets-1) {
                    state = 0;
                } else {
                    state++;
                }
                c = 0;
                delay(BLINK_TIME*10);
                break;
            }
            /** Delay only BLINK_TIME per MULTIPLIER cycle */
            delay(BLINK_TIME);
            /** Add some extra delay for specific frames */
            if (state == 1) {
                if (c >= 6) { delay(BLINK_TIME*10); }
                if (c >= 7) { delay(BLINK_TIME*10); }
            } else if (state == 3) {
                delay(BLINK_TIME);
            }
        }
        
        /** Paused - a boolean that decided whether or not to move to the next frame */
        if (!Paused) { c++; }
    }
}

//void StartFlash() {
//    for (int i=0; i<NUM_LEDS; i++) {
//        leds[i] = 0xff0000;
//    }
//    FastLED.show();
//    delay(BLINK_TIME*20);
//
//    for (int i=0; i<NUM_LEDS; i++) {
//        leds[i] = 0x00ff00;
//    }
//    FastLED.show();
//    delay(BLINK_TIME*20);
//
//    for (int i=0; i<NUM_LEDS; i++) {
//        leds[i] = 0x0000ff;
//    }
//    FastLED.show();
//    delay(BLINK_TIME*20);
//
//    for (int i=0; i<NUM_LEDS; i++) {
//        leds[i] = 0x000000;
//    }
//    FastLED.show();
//}

void DrawOneFrame(const long pixel_arr[])
{
    for(byte y=0; y<LENGTH; y++) {
        for(byte x=0; x<WIDTH; x++) {
            leds[XY(x,y)] = pgm_read_dword(&pixel_arr[(y * WIDTH) + x]);
        }
    }
    FastLED.show();
}
